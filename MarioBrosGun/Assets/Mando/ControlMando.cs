////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
////     version 1.4.4
////     from Assets/Mando/ControlMando.inputactions
////
////     Changes to this file may cause incorrect behavior and will be lost if
////     the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------

//using System;
//using System.Collections;
//using System.Collections.Generic;
//using UnityEngine.InputSystem;
//using UnityEngine.InputSystem.Utilities;

//public partial class @ControlMando : IInputActionCollection2, IDisposable
//{
//    public InputActionAsset asset { get; }
//    public @ControlMando()
//    {
//        asset = InputActionAsset.FromJson(@"{
//    ""name"": ""ControlMando"",
//    ""maps"": [
//        {
//            ""name"": ""Juego"",
//            ""id"": ""dd979808-c347-47ef-b0be-a88e00a0e45a"",
//            ""actions"": [
//                {
//                    ""name"": ""desplazamiento derecha"",
//                    ""type"": ""Button"",
//                    ""id"": ""f038246d-c316-4f83-bf33-993043df2a9d"",
//                    ""expectedControlType"": ""Button"",
//                    ""processors"": """",
//                    ""interactions"": """",
//                    ""initialStateCheck"": false
//                }
//            ],
//            ""bindings"": [
//                {
//                    ""name"": """",
//                    ""id"": ""b914507b-8e9b-474a-a819-bafe2d993580"",
//                    ""path"": ""<Gamepad>/leftStick/right"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""desplazamiento derecha"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""267e92cc-b766-4d33-b669-20b1bf8efc58"",
//                    ""path"": ""<DualShockGamepad>/rightTrigger"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""desplazamiento derecha"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                }
//            ]
//        },
//        {
//            ""name"": ""New action map1"",
//            ""id"": ""857b15fd-02d7-479d-b3b0-333ebe6de98d"",
//            ""actions"": [
//                {
//                    ""name"": ""New action"",
//                    ""type"": ""Button"",
//                    ""id"": ""5b5b94af-3ed9-4f77-9493-39b7a2f01457"",
//                    ""expectedControlType"": ""Button"",
//                    ""processors"": """",
//                    ""interactions"": """",
//                    ""initialStateCheck"": false
//                }
//            ],
//            ""bindings"": [
//                {
//                    ""name"": """",
//                    ""id"": ""0d4adaf9-ec90-42e9-b7dd-764c0aac30f5"",
//                    ""path"": """",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""New action"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                }
//            ]
//        }
//    ],
//    ""controlSchemes"": []
//}");
//        // Juego
//        m_Juego = asset.FindActionMap("Juego", throwIfNotFound: true);
//        m_Juego_desplazamientoderecha = m_Juego.FindAction("desplazamiento derecha", throwIfNotFound: true);
//        // New action map1
//        m_Newactionmap1 = asset.FindActionMap("New action map1", throwIfNotFound: true);
//        m_Newactionmap1_Newaction = m_Newactionmap1.FindAction("New action", throwIfNotFound: true);
//    }

//    public void Dispose()
//    {
//        UnityEngine.Object.Destroy(asset);
//    }

//    public InputBinding? bindingMask
//    {
//        get => asset.bindingMask;
//        set => asset.bindingMask = value;
//    }

//    public ReadOnlyArray<InputDevice>? devices
//    {
//        get => asset.devices;
//        set => asset.devices = value;
//    }

//    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

//    public bool Contains(InputAction action)
//    {
//        return asset.Contains(action);
//    }

//    public IEnumerator<InputAction> GetEnumerator()
//    {
//        return asset.GetEnumerator();
//    }

//    IEnumerator IEnumerable.GetEnumerator()
//    {
//        return GetEnumerator();
//    }

//    public void Enable()
//    {
//        asset.Enable();
//    }

//    public void Disable()
//    {
//        asset.Disable();
//    }
//    public IEnumerable<InputBinding> bindings => asset.bindings;

//    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
//    {
//        return asset.FindAction(actionNameOrId, throwIfNotFound);
//    }
//    public int FindBinding(InputBinding bindingMask, out InputAction action)
//    {
//        return asset.FindBinding(bindingMask, out action);
//    }

//    // Juego
//    private readonly InputActionMap m_Juego;
//    private IJuegoActions m_JuegoActionsCallbackInterface;
//    private readonly InputAction m_Juego_desplazamientoderecha;
//    public struct JuegoActions
//    {
//        private @ControlMando m_Wrapper;
//        public JuegoActions(@ControlMando wrapper) { m_Wrapper = wrapper; }
//        public InputAction @desplazamientoderecha => m_Wrapper.m_Juego_desplazamientoderecha;
//        public InputActionMap Get() { return m_Wrapper.m_Juego; }
//        public void Enable() { Get().Enable(); }
//        public void Disable() { Get().Disable(); }
//        public bool enabled => Get().enabled;
//        public static implicit operator InputActionMap(JuegoActions set) { return set.Get(); }
//        public void SetCallbacks(IJuegoActions instance)
//        {
//            if (m_Wrapper.m_JuegoActionsCallbackInterface != null)
//            {
//                @desplazamientoderecha.started -= m_Wrapper.m_JuegoActionsCallbackInterface.OnDesplazamientoderecha;
//                @desplazamientoderecha.performed -= m_Wrapper.m_JuegoActionsCallbackInterface.OnDesplazamientoderecha;
//                @desplazamientoderecha.canceled -= m_Wrapper.m_JuegoActionsCallbackInterface.OnDesplazamientoderecha;
//            }
//            m_Wrapper.m_JuegoActionsCallbackInterface = instance;
//            if (instance != null)
//            {
//                @desplazamientoderecha.started += instance.OnDesplazamientoderecha;
//                @desplazamientoderecha.performed += instance.OnDesplazamientoderecha;
//                @desplazamientoderecha.canceled += instance.OnDesplazamientoderecha;
//            }
//        }
//    }
//    public JuegoActions @Juego => new JuegoActions(this);

//    // New action map1
//    private readonly InputActionMap m_Newactionmap1;
//    private INewactionmap1Actions m_Newactionmap1ActionsCallbackInterface;
//    private readonly InputAction m_Newactionmap1_Newaction;
//    public struct Newactionmap1Actions
//    {
//        private @ControlMando m_Wrapper;
//        public Newactionmap1Actions(@ControlMando wrapper) { m_Wrapper = wrapper; }
//        public InputAction @Newaction => m_Wrapper.m_Newactionmap1_Newaction;
//        public InputActionMap Get() { return m_Wrapper.m_Newactionmap1; }
//        public void Enable() { Get().Enable(); }
//        public void Disable() { Get().Disable(); }
//        public bool enabled => Get().enabled;
//        public static implicit operator InputActionMap(Newactionmap1Actions set) { return set.Get(); }
//        public void SetCallbacks(INewactionmap1Actions instance)
//        {
//            if (m_Wrapper.m_Newactionmap1ActionsCallbackInterface != null)
//            {
//                @Newaction.started -= m_Wrapper.m_Newactionmap1ActionsCallbackInterface.OnNewaction;
//                @Newaction.performed -= m_Wrapper.m_Newactionmap1ActionsCallbackInterface.OnNewaction;
//                @Newaction.canceled -= m_Wrapper.m_Newactionmap1ActionsCallbackInterface.OnNewaction;
//            }
//            m_Wrapper.m_Newactionmap1ActionsCallbackInterface = instance;
//            if (instance != null)
//            {
//                @Newaction.started += instance.OnNewaction;
//                @Newaction.performed += instance.OnNewaction;
//                @Newaction.canceled += instance.OnNewaction;
//            }
//        }
//    }
//    public Newactionmap1Actions @Newactionmap1 => new Newactionmap1Actions(this);
//    public interface IJuegoActions
//    {
//        void OnDesplazamientoderecha(InputAction.CallbackContext context);
//    }
//    public interface INewactionmap1Actions
//    {
//        void OnNewaction(InputAction.CallbackContext context);
//    }
//}
